.game-block {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    position: relative;
    height: 576px;
    --player-border: 15px;
    border-radius: var(--player-border);
    box-shadow: 0 8px 8px rgba(0, 0, 0, .4);

    @media screen and (max-width: $containerWidthSum) {
        @include resp-property(height, 576, 300, $size-containerWidthSum, $size-mobileWidth, 1, 1);
    }

    .ending-on {
        position: absolute;
        top: -225px; left: 50%;
        transform: translateX(-50%);
        display: flex;
        flex-direction: column;
        padding: 20px;
        min-width: 400px;
        z-index: 20;

        @media screen and (max-width: $containerWidthSum) {
            top: -295px;
        }
        .padding {
            padding: 0 50px;
        }
        &__text {
            font-size: 24px;
            font-weight: 700;
            line-height: 50px;
            text-align: center;
            color: $white;
            border-top: 2px solid $black;
        }
        &__input {
            font-size: 20px;
            text-align: center;
            padding: 12px;
            width: 100%;
            background-color: rgb(223, 223, 223);
            border-bottom: 2px solid $black;
            transition: all .15s ease 0s;

            &:focus {
                background-color: $white;
            }
        }
        &__btn {
            display: block;
            width: 100%;
            font-size: 20px;
            padding: 12px;
            background-color: $white;
            cursor: pointer;
            transition: all .15s ease 0s;
            border-bottom: 2px solid $black;

            &:hover {
                background-color: rgb(223, 223, 223);
            }
        }
        &__num-now {
            font-size: 24px;
            font-weight: 700;
            line-height: 50px;
            text-align: center;
            color: $white;
            
            @media screen and (max-width: $containerWidthSum) {
                @include resp-property(font-size, 20, 18, $size-containerWidth, $size-mobileWidth, 1, 1);
            }
            .wrap {
                word-break: break-all;
            }
        }
    }

    .player {
        position: relative;
        z-index: 10;
        display: flex;
        flex-direction: column;
        padding: 80px 100px;
        row-gap: 50px;
        justify-content: space-between;
        background-color: rgba(255, 255, 255, .4);
        transition: all .3s ease 0s;

        @media screen and (max-width: $containerWidthSum) {
            @include resp-property(padding-top, 80, 10, $size-containerWidthSum, $size-mobileWidth, 1, 1);
            @include resp-property(padding-bottom, 80, 10, $size-containerWidthSum, $size-mobileWidth, 1, 1);
            @include resp-property(padding-left, 100, 10, $size-containerWidthSum, $size-mobileWidth, 1, 1);
            @include resp-property(padding-right, 100, 10, $size-containerWidthSum, $size-mobileWidth, 1, 1);
        }
        &._active-player {
            background-color: rgba(255, 255, 255, .6);
        }
        &._winner {
            background-color: rgba(0, 0, 0, .9);
            color: red;
        }
        &.player-1 {
            border-top-left-radius: var(--player-border);
            border-bottom-left-radius: var(--player-border);
        }
        &.player-2 {
            border-top-right-radius: var(--player-border);
            border-bottom-right-radius: var(--player-border);
        }

        &__info {
            display: flex;
            flex-direction: column;
            row-gap: 20px;
            align-items: center;
        }
        &__title {
            font-size: 40px;
            text-transform: uppercase;

            @media screen and (max-width: $containerWidthSum) {
                @include resp-property(font-size, 40, 20, $size-containerWidthSum, $size-mobileWidth, 1, 1);
            }
        }
        &__score {
            color: $orange;
            font-size: 80px;

            @media screen and (max-width: $containerWidthSum) {
                @include resp-property(font-size, 80, 60, $size-containerWidth, $size-mobileWidth, 1, 1);
            }
        }
        &__score-block.score-block {
            margin: 0 auto;
            padding: 20px 35px;
            background-color: $orange;
            border-radius: 15px;
            text-align: center;
            color: $white;

            @media screen and (max-width: $containerWidthSum) {
                @include resp-property(padding-top, 20, 8, $size-containerWidthSum, $size-mobileWidth, 1, 1);
                @include resp-property(padding-bottom, 20, 8, $size-containerWidthSum, $size-mobileWidth, 1, 1);
                @include resp-property(padding-left, 35, 15, $size-containerWidthSum, $size-mobileWidth, 1, 1);
                @include resp-property(padding-right, 35, 15, $size-containerWidthSum, $size-mobileWidth, 1, 1);
            }
            .score-block__text {
                font-size: 20px;
                text-transform: uppercase;

                @media screen and (max-width: $containerWidthSum) {
                    @include resp-property(font-size, 20, 16, $size-containerWidth, $size-mobileWidth, 1, 1);
                }
            }
            .score-block__score {
                margin-top: 15px;
                font-size: 30px;
            }
        }
    }
    .messages-modal {
        &.modal {
            position: fixed;
            top: 0; left: 0;
            width: 100vw;
            height: 100vh;
            z-index: 30;
            background-color: rgba(0, 0, 0, .4);
            display: flex;
            justify-content: center;
            align-items: center;
            transition: all .3s ease 0s;

            visibility: hidden;
            opacity: 0;

            .modal-content {
                position: relative;
                top: -100%; left: 0;
                width: 600px;
                color: $black;
                background-color: $white;
                padding: 40px 20px;
                border-radius: 15px;
                box-shadow: 4px 8px 8px rgba(0, 0, 0, .4);
                transition: all .3s ease 0s;

                @media screen and (max-width: $containerWidthSum) {
                    @include resp-property(width, 600, 270, $size-containerWidth, $size-mobileWidth, 1, 1);
                }
            }
            .modal-close {
                position: absolute;
                top: 5px; right: 8px;
                font-size: 60px;
                display: block;
                width: 30px;
                height: 30px;
                overflow: hidden;
                user-select: none;
                display: flex;
                justify-content: center;
                align-items: center;
                cursor: pointer;
                transition: all .3s ease 0s;

                &:hover {
                    transform: rotate(90deg) translate(0px, -2px);
                }
            }
        }
        &._active {
            visibility: visible;
            opacity: 1;

            .modal-content {
                top: 0;
            }
        }
        .modal__text {
            font-size: 30px;
            font-weight: 700;
            text-align: center;

            @media screen and (max-width: $containerWidthSum) {
                @include resp-property(font-size, 30, 23, $size-containerWidth, $size-mobileWidth, 1, 1);
            }
        }
    }
    .dice {
        position: absolute;
        top: 50%; left: 50%;
        transform: translate(-50%, calc(-50% - 55px));
        width: 130px;
        height: 130px;
        background-color: white;
        border-radius: 15px;
        z-index: 10;
        transition: all .15s ease 0s;

        @media screen and (max-width: $containerWidthSum) {
            @include resp-property(width, 130, 80, $size-containerWidth, $size-mobileWidth, 1, 1);
            @include resp-property(height, 130, 80, $size-containerWidth, $size-mobileWidth, 1, 1);
            @include resp-property(top, 300, 210, $size-containerWidth, $size-mobileWidth, 1, 1);
        }
        &-circles-wrap {
            .dice-circle {
                --circle-padding: 12px;
                
                position: absolute;
                width: 30px;
                height: 30px;
                background-color: $black;
                border-radius: 50%;
                transition: all .15s ease 0s;

                @media screen and (max-width: $containerWidthSum) {
                    @include resp-property(width, 30, 14, $size-containerWidth, $size-mobileWidth, 1, 1);
                    @include resp-property(height, 30, 14, $size-containerWidth, $size-mobileWidth, 1, 1);
                }
            }
        }
        &-num-1 {
            .dice-circle-1 {
                top: 50%; left: 50%;
                transform: translate(-50%, -50%);
            }
        }
        &-num-2 {
            .dice-circle-1 {
                top: var(--circle-padding); right: var(--circle-padding);
            }
            .dice-circle-2 {
                bottom: var(--circle-padding); left: var(--circle-padding);
            }
        }
        &-num-3 {
            .dice-circle-1 {
                top: var(--circle-padding); right: var(--circle-padding);
            }
            .dice-circle-2 {
                top: 50%; left: 50%;
                transform: translate(-50%, -50%);
            }
            .dice-circle-3 {
                bottom: var(--circle-padding); left: var(--circle-padding);
            }
        }
        &-num-4 {
            .dice-circle-1 {
                top: var(--circle-padding); left: var(--circle-padding);
            }
            .dice-circle-2 {
                top: var(--circle-padding); right: var(--circle-padding);
            }
            .dice-circle-3 {
                bottom: var(--circle-padding); left: var(--circle-padding);
            }
            .dice-circle-4 {
                bottom: var(--circle-padding); right: var(--circle-padding);
            }
        }
        &-num-5 {
            .dice-circle-1 {
                top: var(--circle-padding); left: var(--circle-padding);
            }
            .dice-circle-2 {
                top: var(--circle-padding); right: var(--circle-padding);
            }
            .dice-circle-3 {
                top: 50%; left: 50%;
                transform: translate(-50%, -50%);
            }
            .dice-circle-4 {
                bottom: var(--circle-padding); left: var(--circle-padding);
            }
            .dice-circle-5 {
                bottom: var(--circle-padding); right: var(--circle-padding);
            }
        }
        &-num-6 {
            .dice-circle-1 {
                top: var(--circle-padding); left: var(--circle-padding);
            }
            .dice-circle-2 {
                top: var(--circle-padding); right: var(--circle-padding);
            }
            .dice-circle-3 {
                top: 50%; left: var(--circle-padding);
                transform: translateY(-50%);
            }
            .dice-circle-4 {
                top: 50%; right: var(--circle-padding);
                transform: translateY(-50%);
            }
            .dice-circle-5 {
                bottom: var(--circle-padding); left: var(--circle-padding);
            }
            .dice-circle-6 {
                bottom: var(--circle-padding); right: var(--circle-padding);
            }
        }
        &._hidden {
            visibility: hidden;
            opacity: 0;
        }
    }
    .game-btns {
        position: absolute;
        top: 0; left: 0;
        width: 100%;
        height: 100%;
        
        .game-btn {
            min-width: 200px;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            border-radius: 100px;
            font-size: 18px;
            font-weight: 700;
            color: rgba(0, 0, 0, .8);
            text-transform: uppercase;
            background-color: rgba(255, 255, 255, .7);
            padding: 0px 30px;
            z-index: 20;
            cursor: pointer;
            transition: all .3s ease 0s;
            --game-btn-height: 51px;
            height: var(--game-btn-height);

            &:disabled {
                background-color: rgba(255, 22, 22, 0.5);
                cursor: default;
            }
            &:not(:disabled):hover {
                transform: translateX(-50%) translateY(-5px);
                box-shadow: 0 5px 0 rgba(0, 0, 0, .8);
            }
            &:not(:disabled):active {
                transform: translateX(-50%) translateY(-5px);
                box-shadow: 0 5px 0 rgba(0, 0, 0, .8);
                background: rgba(255, 156, 51, 0.678);
                transition: all .1s ease 0s;
            }
            &.btn-new-game {
                top: 20px;

                @media screen and (max-width: $containerWidthSum) {
                    top: calc((-1 * var(--game-btn-height)) - 20px);
                }
            }
            &.btn-roll-dice {
                bottom: 136px;

                @media screen and (max-width: $containerWidthSum) {
                    bottom: calc((-1 * var(--game-btn-height)) - 20px);
                }
            }
            &.btn-hold-dice {
                bottom: 76px;

                @media screen and (max-width: $containerWidthSum) {
                    bottom: calc((-1 * var(--game-btn-height)) - (20px * 2) - var(--game-btn-height));
                }
            }
        }
    }
}